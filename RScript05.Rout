
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list=ls(all.names=TRUE))
> rm(list=objects(all.names=TRUE))
> #dev.off()
> 
> ########################################################################
> ## This script is for conducting further analysis on intensity and gc ##
> ## content. This script conducts a group level model, a model on mol- ##
> ## -ecule level aggregated model and produces an added variable plot  ##
> ########################################################################
> 
> ########################################################################
> ## Initialize Header file and function library                        ##
> ########################################################################
> FilePath <- '~/RA_Genomics/Project_GC_Content/RScripts_GC_Content/'
> DataPath <- '~/RA_Genomics/Project_GC_Content/'
> DataPath.Steve <- DataPath
> Filename.Header <- paste('~/RScripts/HeaderFile_Nandi.R', sep='')
> source(Filename.Header)
Loading required package: car
Loading required package: MASS
Loading required package: nnet

Attaching package: ‘alr3’

The following object is masked from ‘package:MASS’:

    forbes

Loading required package: bigmemory
Loading required package: bigmemory.sri
Loading required package: BH

bigmemory >= 4.0 is a major revision since 3.1.2; please see packages
biganalytics and and bigtabulate and http://www.bigmemory.org for more information.

Loading required package: DBI

Attaching package: ‘boot’

The following object is masked from ‘package:alr3’:

    wool

The following object is masked from ‘package:car’:

    logit

Loading required package: lattice

Attaching package: ‘lattice’

The following object is masked from ‘package:boot’:

    melanoma

Loading required package: latticeExtra
Loading required package: RColorBrewer
Loading required package: rpart
Loading required package: randomForest
randomForest 4.6-7
Type rfNews() to see new features/changes/bug fixes.
Loading required package: survival
Loading required package: splines

Attaching package: ‘survival’

The following object is masked from ‘package:boot’:

    aml


Attaching package: ‘DAAG’

The following object is masked from ‘package:survival’:

    lung

The following object is masked from ‘package:alr3’:

    ais

The following object is masked from ‘package:car’:

    vif

The following object is masked from ‘package:MASS’:

    hills

Loading required package: foreach

Attaching package: ‘foreach’

The following object is masked from ‘package:chron’:

    times

Loading required package: iterators
Loading required package: snow
Loading required package: foreign

Attaching package: ‘epicalc’

The following object is masked from ‘package:lattice’:

    dotplot

The following object is masked from ‘package:car’:

    recode


Attaching package: ‘faraway’

The following object is masked from ‘package:DAAG’:

    orings, ozone, vif

The following object is masked from ‘package:survival’:

    rats

The following object is masked from ‘package:rpart’:

    solder

The following object is masked from ‘package:lattice’:

    melanoma

The following object is masked from ‘package:boot’:

    logit, melanoma

The following object is masked from ‘package:alr3’:

    cathedral, pipeline, twins

The following object is masked from ‘package:car’:

    logit, vif

Loading required package: timeDate
Loading required package: timeSeries

Attaching package: ‘timeSeries’

The following object is masked from ‘package:randomForest’:

    outlier


Attaching package: ‘fBasics’

The following object is masked from ‘package:car’:

    densityPlot

The following object is masked from ‘package:base’:

    norm

Loading required package: robustbase

Attaching package: ‘robustbase’

The following object is masked from ‘package:faraway’:

    epilepsy

The following object is masked from ‘package:DAAG’:

    milk

The following object is masked from ‘package:survival’:

    heart

The following object is masked from ‘package:boot’:

    salinity

The following object is masked from ‘package:alr3’:

    cloud

Loading required package: fAssets
Loading required package: sn
Loading required package: mnormt
Loading required package: fCopulae

Attaching package: ‘fAssets’

The following object is masked from ‘package:fCopulae’:

    .mvstFit

Loading required package: mgcv
This is mgcv 1.7-24. For overview type 'help("mgcv-package")'.
Loading required package: fTrading

Attaching package: ‘fTrading’

The following object is masked from ‘package:timeSeries’:

    rollMax, rollMean, rollMin

Loading required package: fMultivar

Attaching package: ‘fMultivar’

The following object is masked from ‘package:fAssets’:

    .mvstFit

The following objects are masked from ‘package:fCopulae’:

    .delliptical2dSlider, .dnorm2d, .gfunc2d, .mvsnorm.plot.1,
    .mvsnorm.plot.1A, .mvsnorm.plot.1B, .mvsnorm.plot.2,
    .mvsnorm.plot.3, .mvsnorm.plot.4, .mvsnorm.plot.5, .mvsnormFit,
    .mvsnormPlot, .mvst.plot.1, .mvst.plot.1A, .mvst.plot.1B,
    .mvst.plot.2, .mvst.plot.3, .mvst.plot.4, .mvst.plot.5, .mvstFit,
    .mvstPlot, .pnorm2d, .rnorm2d, .TInt, .TOwen, contour.gridData,
    dcauchy2d, delliptical2d, density2d, dmvsnorm, dmvst, dnorm2d,
    dt2d, grid2d, gridData, hexBinning, hist2d, integrate2d, mvFit,
    pcauchy2d, persp.gridData, pmvsnorm, pmvst, pnorm2d, pt2d,
    rcauchy2d, rmvsnorm, rmvst, rnorm2d, rt2d, squareBinning

Loaded gam 1.08


Attaching package: ‘gam’

The following object is masked from ‘package:mgcv’:

    gam, gam.control, gam.fit, plot.gam, predict.gam, s, summary.gam

gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: read.xls support for 'XLSX' (Excel 2007+) files ENABLED.

Attaching package: ‘gdata’

The following object is masked from ‘package:randomForest’:

    combine

The following object is masked from ‘package:stats’:

    nobs

The following object is masked from ‘package:utils’:

    object.size


Attaching package: ‘gmodels’

The following object is masked from ‘package:epicalc’:

    ci


Attaching package: ‘ggplot2’

The following object is masked from ‘package:latticeExtra’:

    layer

Loading required package: gtools

Attaching package: ‘gtools’

The following object is masked from ‘package:faraway’:

    logit

The following object is masked from ‘package:boot’:

    inv.logit, logit

The following object is masked from ‘package:car’:

    logit

Loading required package: caTools
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:fPortfolio’:

    getNames

Loading required package: KernSmooth
KernSmooth 2.23 loaded
Copyright M. P. Wand 1997-2009

Attaching package: ‘gplots’

The following object is masked from ‘package:fMultivar’:

    hist2d

The following object is masked from ‘package:fCopulae’:

    hist2d

The following object is masked from ‘package:stats’:

    lowess

Hmisc library by Frank E Harrell Jr

Type library(help='Hmisc'), ?Overview, or ?Hmisc.Overview')
to see overall documentation.

NOTE:Hmisc no longer redefines [.factor to drop unused levels when
subsetting.  To get the old behavior of Hmisc type dropUnusedLevels().


Attaching package: ‘Hmisc’

The following object is masked from ‘package:gdata’:

    combine

The following object is masked from ‘package:epicalc’:

    fillin, recode

The following object is masked from ‘package:survival’:

    untangle.specials

The following object is masked from ‘package:randomForest’:

    combine

The following object is masked from ‘package:bigmemory’:

    describe

The following object is masked from ‘package:bigmemory.sri’:

    describe

The following object is masked from ‘package:car’:

    recode

The following object is masked from ‘package:base’:

    format.pval, round.POSIXt, trunc.POSIXt, units


Attaching package: ‘kernlab’

The following object is masked from ‘package:epicalc’:

    alpha, csi

Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:epicalc’:

    expand, pack


Attaching package: ‘lme4’

The following object is masked from ‘package:stats’:

    AIC, BIC

Loading required package: zoo

Attaching package: ‘zoo’

The following object is masked from ‘package:timeSeries’:

    time<-

The following object is masked from ‘package:base’:

    as.Date, as.Date.numeric


Attaching package: ‘lmtest’

The following object is masked from ‘package:epicalc’:

    lrtest


Attaching package: ‘nlme’

The following object is masked from ‘package:lme4’:

    fixef, lmList, ranef, VarCorr

The following object is masked from ‘package:fPortfolio’:

    getData

Loading required package: xts

Attaching package: ‘PerformanceAnalytics’

The following object is masked from ‘package:gplots’:

    textplot

The following object is masked from ‘package:timeDate’:

    kurtosis, skewness

The following object is masked from ‘package:graphics’:

    legend


Attaching package: ‘plotrix’

The following object is masked from ‘package:gplots’:

    plotCI


Attaching package: ‘pls’

The following object is masked from ‘package:stats’:

    loadings


Attaching package: ‘plyr’

The following object is masked from ‘package:Hmisc’:

    is.discrete, summarize

The following object is masked from ‘package:faraway’:

    ozone

The following object is masked from ‘package:epicalc’:

    rename

The following object is masked from ‘package:DAAG’:

    ozone


Attaching package: ‘psych’

The following object is masked from ‘package:plotrix’:

    rescale

The following object is masked from ‘package:kernlab’:

    alpha

The following object is masked from ‘package:Hmisc’:

    describe

The following object is masked from ‘package:gtools’:

    logit

The following object is masked from ‘package:ggplot2’:

    %+%

The following object is masked from ‘package:robustbase’:

    cushny

The following object is masked from ‘package:fBasics’:

    tr

The following object is masked from ‘package:faraway’:

    logit

The following object is masked from ‘package:epicalc’:

    alpha

The following object is masked from ‘package:DAAG’:

    cities

The following object is masked from ‘package:boot’:

    logit

The following object is masked from ‘package:bigmemory’:

    describe

The following object is masked from ‘package:bigmemory.sri’:

    describe

The following object is masked from ‘package:alr3’:

    heights

The following object is masked from ‘package:car’:

    logit

Loading required package: Defaults
Loading required package: TTR

Attaching package: ‘TTR’

The following object is masked from ‘package:fTrading’:

    SMA

The following object is masked from ‘package:fBasics’:

    volatility

Version 0.4-0 included new data defaults. See ?getSymbols.

Attaching package: ‘quantmod’

The following object is masked from ‘package:Hmisc’:

    Lag


Attaching package: ‘Rcpp’

The following object is masked from ‘package:inline’:

    registerPlugin

Loading required package: brew

Attaching package: ‘sos’

The following object is masked from ‘package:utils’:

    ?

Loading required package: sda
Loading required package: entropy
Loading required package: corpcor

Attaching package: ‘corpcor’

The following object is masked from ‘package:gmodels’:

    fast.svd

Loading required package: fdrtool

Attaching package: ‘survey’

The following object is masked from ‘package:Hmisc’:

    deff

The following object is masked from ‘package:graphics’:

    dotchart


Attaching package: ‘svMisc’

The following object is masked from ‘package:gdata’:

    Args


Attaching package: ‘tseries’

The following object is masked from ‘package:chron’:

    is.weekend

Loading required package: circular

Attaching package: ‘circular’

The following object is masked from ‘package:stats’:

    sd, var


Attaching package: ‘wordcloud’

The following object is masked from ‘package:PerformanceAnalytics’:

    textplot

The following object is masked from ‘package:gplots’:

    textplot

Warning messages:
1: replacing previous import ‘rollMax’ when loading ‘fTrading’ 
2: replacing previous import ‘rollMean’ when loading ‘fTrading’ 
3: replacing previous import ‘rollMin’ when loading ‘fTrading’ 
4: In FUN(X[[9L]], ...) :
  failed to assign RegisteredNativeSymbol for twins to twins since twins is already defined in the ‘cluster’ namespace
> source(paste(FilePath, 'fn_Library_GC_Content.R', sep=''))
> ########################################################################
> 
> ########################################################################
> ## Data Input                                                         ##
> ########################################################################
> Fragments <- fn_subsetByCoverage(CoverageNum=30, filename='FragmentData_5000.RData')
> names(Fragments)
[1] "Fragment.Keep" "FragmentData" 
> 
> Fragment.Keep <- Fragments[['Fragment.Keep']]
> FragmentData <- Fragments[['FragmentData']]
> 
> Filename <- paste(DataPath.Steve, 'intensityAndGCForAlignedFrags.5000Groups', sep='')
> #Filename <- paste(DataPath.Steve, 'intensityAndGCForAlignedFrags.1061Groups', sep='')
> #Filename <- paste(DataPath.Steve, 'intensityAndGCForAlignedFrags.50Groups', sep='')
> Data <- read.table(file=Filename, header=TRUE, sep='\t', 
+                    skip=0, stringsAsFactors=FALSE, fill=TRUE)
> Data$groupID <- substr(x=Data$moleculeID, start=1, stop=7)
> str(Data)
'data.frame':	3871094 obs. of  13 variables:
 $ moleculeID              : chr  "2388301_734_2060415" "2393020_734_2060368" "2396217_734_2060303" "2398509_734_2060043" ...
 $ alignedChr              : chr  "1" "1" "1" "1" ...
 $ alignedFragIndex        : int  1 1 1 1 2 2 2 2 2 2 ...
 $ fractionGC              : num  0.594 0.594 0.594 0.594 0.498 ...
 $ intensityPerPixel       : num  35662 37936 35028 40277 38272 ...
 $ fragConversionFactor    : num  193 180 200 220 163 ...
 $ lengthRatio             : num  1.085 1.045 0.952 0.941 1.093 ...
 $ moleculeConversionFactor: num  223 215 196 194 225 ...
 $ numFrags                : int  18 15 18 15 17 18 14 15 18 15 ...
 $ numPixels               : int  581 542 934 593 523 581 535 542 934 593 ...
 $ approx3numPixels        : num  590 550 945 596 530 ...
 $ totalIntensity          : int  22612901 19795628 29258132 23631720 19141662 22612901 19998684 19795628 29258132 23631720 ...
 $ groupID                 : chr  "2388301" "2393020" "2396217" "2398509" ...
> dim(Data)
[1] 3871094      13
> 
> Data <- merge(x=Data, y=Fragment.Keep, all=T)
> 
> Data <- subset(Data, Keep==1)
> 
> rm(Fragments, Fragment.Keep, FragmentData)
> 
> NumRows <- 5000000
> ########################################################################
> ## Data Input                                                         ##
> ########################################################################
> ## Model4: Y = log(intensity), X = GC content + number of fragments + number of pixels
> ## + groupID (Number of pixels is a measure of the molecule length)
> # load('Model4.RData')
> # summary(Model4)$coefficients[1:4,]
> # summary(Model4)$r.squared
> 
> ## jpeg(filename='AVPlot_fractionGC_Model4.jpg')
> ## avPlot(model=Model4, variable='fractionGC')
> ## dev.off()
> 
> ## Next model is to run the same data as in Model4, but weighted least squares
> ## Model5: Y = log(intensity), X = GC content + number of fragments + number of pixels
> ## + groupID (Weighted least square)
> Data$Weights <- Data$numMolecules / sum(Data$numMolecules)
> ## Time1 <- Sys.time()
> ## ModelA <- lm( log(intensityPerPixel) ~ fractionGC + numFrags + numPixels +
> ##              as.factor(groupID), weights=Weights,
> ##              data=Data[1:15000,])
> Time2 <- Sys.time()
> Model5 <- biglm::biglm( log(intensityPerPixel) ~ fractionGC + numFrags + numPixels +
+              as.factor(groupID), weights=~Weights,
+              data=Data[1:NumRows,])
Error in update.bigqr(qr, mm, model.response(mf) - off, w) : 
  long vectors not supported yet: ../../src/include/Rinlinedfuns.h:100
Calls: <Anonymous> -> update -> update.bigqr -> .Call
Execution halted
